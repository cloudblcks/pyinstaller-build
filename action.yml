name: 'PyInstaller Build'
description: 'build your python program to executable'
author: 'Eric Lam'
branding:
  icon: 'package'
  color: 'gray-dark'

inputs:
  main:
    description: 'the main python file (without .py)'
    required: true
  dist:
    description: 'the dist path'
    required: false
    default: './dist'
  python_version:
    description: 'the version of python'
    required: false
    default: '3.9.7'
  pyinstaller_version:
    description: 'the version of pyinstaller'
    required: false
    default: '4.7'
  artifact:
    description: 'the output exe name'
    required: false
    default: 'main'
  use-dependencies:
    description: 'whether to install requirements.txt before build'
    required: false
    default: true
  requirements_path:
    description: 'path to requirements.txt'
    required: false
    default: 'requirements.txt'
  src_path:
    description: 'path to code source directory'
    required: false
    default: '.'
  data_paths:
    description: 'list of paths to data files, delimited by newlines, in "source:destination" format'
    required: false
  no-console:
    description: 'whether to disppear console terminal'
    required: false
    default: false
  icon:
    description: 'add the icon mark into your executable, the file path of your ico'
    required: false
    default: 'NONE'

runs:
  using: "composite"
  steps: 
    - name: setup python 3.9.7
      uses: actions/setup-python@v2
      with:
        python-version: ${{ inputs.python_version }}
    - name: build exe with pyinstaller
      shell: bash
      run: |
        python -m pip install --upgrade pip 
        ${{ inputs.use-dependencies }} && pip install -r ${{ inputs.requirements_path }}
        ${{ inputs.no-console }} && NO_CONSOLE=--noconsole
        DATA_PATHS=''
        IFS=
        if [ -n "${{ inputs.data_paths }}" ]
        then 
          while read -r path 
          do
            DATA_PATHS+=" --add-data $path" 
          done <<< ${{ inputs.data_paths }} 
        fi
        echo "data paths: $DATA_PATHS"
        [ ${{ inputs.icon }} != "NONE" ] && ICON=--icon=${{ inputs.icon }}.ico
        pip install pyinstaller==${{ inputs.pyinstaller_version }}
        pyinstaller --clean -y --dist ${{ inputs.dist }} $NO_CONSOLE $ICON --name ${{ inputs.artifact }} --path ${{ inputs.src_path }} $DATA_PATHS --onefile ${{ inputs.main }}.py
        chmod +x ${{ inputs.dist }}
